<?php

use Loader\Config\ConfigLoader;
use Logger\Log;
use System\Core\Constants;

require_once __DIR__ . '/../vendor/autoload.php';

define('VALID_REQ', true);
define('APP_DIR', __DIR__);
define('BASE_DIR', __DIR__ . '/../');
define('ENV', '{{env}}');
define('DS', DIRECTORY_SEPARATOR);
define('SUPPRESS_SYSTEM_ERRORS', {{suppress_errors}});

$config = ConfigLoader::getInstance(ConfigLoader::ARRAY_LOADER, ['file' => APP_DIR . '/config.php'], Constants::CONFIG)->load();
$logConfig = ConfigLoader::getInstance(ConfigLoader::VALUE_LOADER, $config->get('log', []), 'log')->load();
Log::getInstance(
    $logConfig->get('level', 'ALL'),
    $logConfig
);

/**
 * Define error handler
 */
if (!function_exists('errHandler')) {
    /**
     * Error handler
     *
     * @param $errNo   Error level
     * @param $errMsg  Error Message
     * @param $errFile Error File
     * @param $errLine Error Line
     *
     * @return void
     */
    function errHandler($errNo, $errMsg, $errFile, $errLine)
    {
        ob_get_contents() and ob_end_clean();
        Log::getInstance()->error(
            $errMsg . ' in ' . $errFile . ' at line ' . $errLine
        );
        echo "An error occurred. Please check the logs for more details.\n";
    }
}

/**
 * Define exception handler
 */
if (!function_exists('exceptionHandler')) {
    /**
     * Error handler
     *
     * @param $exception Exception object
     *
     * @return void
     */
    function exceptionHandler($exception)
    {
        ob_get_contents() and ob_end_clean();
        Log::getInstance()->error(
            $exception->getMessage() . ' in ' . $exception->getFile() . ' at line '
                . $exception->getLine()
        );
        echo "An exception occurred. Please check the logs for more details.\n";
    }
}
